@inject HttpClient _client

<EditForm Model="@vitalsignsrecord" OnValidSubmit="@OnValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<fieldset disabled="@Disabled">
		<div class="form-group">
			<label>Date: </label>
			<div>
				<InputDate @bind-Value="@vitalsignsrecord.RecordDate" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.RecordDate)" />
			</div>
		</div>

		<div class="form-group">
			<label>Time: </label>
			<div>
				<InputDate Type="InputDateType.Time" @bind-Value="@vitalsignsrecord.RecordTime" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.RecordTime)" />
			</div>
		</div>

		<div class="form-group">
			<label>Height (cm): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.Height" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.Height)" />
			</div>
		</div>

		<div class="form-group">
			<label>Weight (kg): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.Weight" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.Weight)" />
			</div>
		</div>

		<div class="form-group">
			<label>Body Temperature (Celsius): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.BodyTemperature" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.BodyTemperature)" />
			</div>
		</div>

		<div class="form-group">
			<label>Blood Pressure Systolic (mmHg): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.BloodPressureSystolic" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.BloodPressureSystolic)" />
			</div>
		</div>

		<div class="form-group">
			<label>Blood Pressure Diastolic (mmHg): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.BloodPressureDiastolic" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.BloodPressureDiastolic)" />
			</div>
		</div>

		<div class="form-group">
			<label>Heart Rate (bpm): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.HeartRate" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.HeartRate)" />
			</div>
		</div>

		<div class="form-group">
			<label>Respiration Rate (bpm): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.RespirationRate" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.RespirationRate)" />
			</div>
		</div>

		<div class="form-group">
			<label>Other Blood Glucose Level (mg/dL): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.OtherBloodGlucoseLevel" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.OtherBloodGlucoseLevel)" />
			</div>
		</div>

		<div class="form-group">
			<label>Other Blood Oxygen Level (SpO2): </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.OtherBloodOxygenLevel" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.OtherBloodOxygenLevel)" />
			</div>
		</div>

 		<div class="form-group">
			<label>Other Step Count: </label>
			<div>
				<InputNumber @bind-Value="@vitalsignsrecord.OtherStepCount" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.OtherStepCount)" />
			</div>
		</div>

		<div class="form-group">
			<label>Others: </label>
			<div>
				<InputText @bind-Value="@vitalsignsrecord.Others" class="form-control" />
				<ValidationMessage For="@(() => vitalsignsrecord.Others)" />
			</div>
		</div>

		<div class="form-group">
				<label>PatientID: </label>
				<div>
				<InputSelect @bind-Value="vitalsignsrecord.PatientID" class="form-control">
						<option value="">-- Select Patient --</option>
						@if (Patients != null)
						{
							foreach (var patient in Patients)
							{
								<option value="@patient.Id">@patient.PatientName - @patient.PatientNRIC</option>
							}
						}
					</InputSelect>
					<ValidationMessage For="@(() => vitalsignsrecord.PatientID)" />
				</div>
			</div>
		<br />
	</fieldset>

	@if (!Disabled)
	{
		<button type="submit" class="btn btn-success btn-block">
			@ButtonText
		</button>
	}

	<BackToList Target="vitalsignsrecords" />
</EditForm>

@code {
	[Parameter] public VitalSignsRecord? vitalsignsrecord { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback OnValidSubmit { get; set; }
	[Parameter] public bool Disabled { get; set; } = false;

	private IList<Patient>? Patients;

	protected async override Task OnInitializedAsync()
	{
		Patients = await _client.GetFromJsonAsync<List<Patient>>($"{Endpoints.PatientsEndpoint}");

		vitalsignsrecord.RecordDate = DateTime.Today;
		vitalsignsrecord.RecordTime = DateTime.Now;
	}
}
