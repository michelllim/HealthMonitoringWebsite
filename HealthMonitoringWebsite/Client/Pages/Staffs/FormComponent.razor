<EditForm Model="@staff" OnValidSubmit="@OnValidSubmit">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<fieldset disabled="@Disabled">
		<div class="form-group">
			<label>Name: </label>
			<div>
				<InputText @bind-Value="@staff.StaffName" class="form-control" />
				<ValidationMessage For="@(() => staff.StaffName)" />
			</div>
		</div>

		<div class="form-group">
			<label>Contact Number: </label>
			<div>
				<InputText @bind-Value="@staff.StaffContactNumber" class="form-control" />
				<ValidationMessage For="@(() => staff.StaffContactNumber)" />
			</div>
		</div>

		<div class="form-group">
			<label>Role: </label>
			<div>
				<InputSelect @bind-Value="staff.StaffRole" class="form-control">
					<option value="">-- Select Role --</option>
					<option value="@staff.StaffRole">Administrator</option>
					<option value="@staff.StaffRole">Admin Staff</option>
					<option value="@staff.StaffRole">Temporary Staff</option>
					<option value="@staff.StaffRole">Doctor</option>
					<option value="@staff.StaffRole">Nurse</option>
				</InputSelect>
				<ValidationMessage For="@(() => staff.StaffRole)" />
			</div>
		</div>

		<div class="form-group">
			<label>Specialization: </label>
			<div>
				<InputSelect @bind-Value="staff.StaffSpecialization" class="form-control">
					<option value="">-- Select Specialization --</option>
					<option value="@staff.StaffSpecialization">Administration</option>
					<option value="@staff.StaffSpecialization">Cardiology</option>
					<option value="@staff.StaffSpecialization">Diagnostic Radiology</option>
					<option value="@staff.StaffSpecialization">Gastroenterology</option>
					<option value="@staff.StaffSpecialization">Haematology</option>
					<option value="@staff.StaffSpecialization">Infectious Diseases</option>
					<option value="@staff.StaffSpecialization">Psychiatry</option>
					<option value="@staff.StaffSpecialization">Public Health</option>
					<option value="@staff.StaffSpecialization">Rehabilitation Medicine</option>
					<option value="@staff.StaffSpecialization">Respiratory Medicine</option>
					<option value="@staff.StaffSpecialization">Urology</option>
				</InputSelect>
				<ValidationMessage For="@(() => staff.StaffSpecialization)" />
			</div>
		</div>

		<div class="form-group">
			<label>Email: </label>
			<div>
				<InputText @bind-Value="@staff.Email" class="form-control" />
				<ValidationMessage For="@(() => staff.Email)" />
			</div>
		</div>

		@* 		<div class="form-group">
		<label>Password: </label>
		<div>
		<InputText @bind-Value="@staff.Password" class="form-control" />
		<ValidationMessage For="@(() => staff.Password)" />
		</div>
		</div> *@
		<br />
	</fieldset>

	@if (!Disabled)
	{
		<button type="submit" class="btn btn-success btn-block">
			@ButtonText
		</button>
	}

	<BackToList Target="staffs" />

</EditForm>

@code {
	[Parameter] public Staff? staff { get; set; }
	[Parameter] public string ButtonText { get; set; } = "Save";
	[Parameter] public EventCallback OnValidSubmit { get; set; }
	[Parameter] public bool Disabled { get; set; } = false;

	[Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }

	protected override async Task OnInitializedAsync()
	{
		var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var userName = state.User?.Identity?.Name;

		if (state.User?.Identity?.IsAuthenticated ?? false)
		{
			staff.Email = userName;

			if (!string.IsNullOrEmpty(userName) && staff != null)
			{
				// Set the patient's email here
				staff.Email = staff.Email;
			}
		}
	}
}
